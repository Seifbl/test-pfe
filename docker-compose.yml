version: "3.8"

services:
  db:
    image: postgres:15
    container_name: trailblazer-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: seif12345
      POSTGRES_DB: trailblazer
    ports:
      - "5432:5432" # optional: expose to host
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./data/dump:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trailblazer"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build: ./backend
    container_name: trailblazer-backend
    env_file: backend/.env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    # Ensure backend can reach DB *inside the network* (service name `db`)
    environment:
      DATABASE_URL: postgres://postgres:seif12345@db:5432/trailblazer
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: trailblazer
      DB_USER: postgres
      DB_PASSWORD: seif12345

  recommendation:
    build: ./recommendation
    container_name: trailblazer-recommendation
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./recommendation:/app

  frontend:
    build: ./frontend
    container_name: trailblazer-frontend
    env_file: frontend/.env
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - PORT=3000

  admin-dashboard:
    build: ./admin-dashboard
    container_name: trailblazer-admin
    env_file: admin-dashboard/.env
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3001:3001"
    volumes:
      - ./admin-dashboard:/app
      - /app/node_modules
      - /app/.next
    environment:
      - PORT=3001

volumes:
  postgres-data:
